networks:
  local:


services:
  postgres:
    image: postgres:13
    container_name: postgres
    expose:
      - ${PGPORT}/tcp
    ports:
      - ${PGPORT}:5432
    environment:
      POSTGRES_PASSWORD: ${PGPASSWORD}
    networks:
      - local

  adminer:
    image: adminer:latest
    container_name: adminer
    ports:
      - ${ADMINER_PORT}:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - local

  btc-testnet:
    image: kylemanna/bitcoind
    container_name: bitcoin-testnet
    restart: always
    volumes:
      - ~/bitcoin-data/testnet:/bitcoin/.bitcoin
    ports:
      - "18332:18332"
      - "18333:18333"
    environment:
      BITCOIN_DATA: /efs/bitcoin-data
    command: -testnet=1 -rpcallowip=0.0.0.0/0 -rpcbind=0.0.0.0 -rpcuser=user -rpcpassword=password -server=1 -wallet=wallet.dat -disablewallet=0

  btc-regtest:
    image: kylemanna/bitcoind
    container_name: bitcoin-regtest
    networks:
      - local
    restart: always
    volumes:
      - ~/bitcoin-data/regtest:/bitcoin/.bitcoin
    ports:
      - "18443:18443"
      - "18444:18444"
    environment:
      BITCOIN_DATA: /efs/bitcoin-data
    command: -regtest=1 -rpcallowip=0.0.0.0/0 -rpcbind=0.0.0.0 -rpcuser=${BTCUSER} -rpcpassword=${BTCUSERPASSWORD} -server=1 -wallet=wallet.dat -disablewallet=0
  bis:
    image: gcr.io/ivanshyu/bis:latest
    container_name: bis
    restart: on-failure
    environment:
      RUST_LOG: 'info,sqlx=warn'
      PGPORT: ${PGPORT}
      PGPASSWORD: ${PGPASSWORD}
      BIS_POSTGRES: ${BIS_POSTGRES}
      BTCUSER: ${BTCUSER}
      BTCUSERPASSWORD: ${BTCUSERPASSWORD}
    command: 'mono'
    ports:
      - 3030:3030
    volumes:
      - ./config_docker.toml:/app/deployment/config.toml
    networks:
      - local
    depends_on:
      - postgres
      - adminer
      - btc-regtest
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - local
    restart: always
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - local
    restart: always
volumes:
  bitcoin_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local
