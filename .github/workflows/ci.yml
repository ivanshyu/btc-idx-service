name: CI/CD
"on":
  # pull_request: null
  # push:
  #   branches:
  #     - main
  #     - feature/*
  workflow_dispatch:
    inputs:
      run_ci:
        description: 'Run ci job'
        required: false
        default: 'true'
      run_build:
        description: 'Run build job'
        required: false
        default: 'true'
      run_deploy:
        description: 'Run deploy job'
        required: false
        default: 'true'
      
env:
  GH_TOKEN: "${{ secrets.GH_TOKEN }}"
  RUST_BACKTRACE: 1
  CARGO_NET_GIT_FETCH_WITH_CLI: true
jobs:
  ci:
    runs-on: self-hosted
    if: ${{ github.event.inputs.run_ci == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: "rustfmt, clippy"
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Start services with docker-compose
        run: |
          just local-pg local-reg
          sleep 10
      - name: Export Github Credentials
        run: |-
          git config --global credential.helper store
          echo "https://${GH_TOKEN}:${GH_TOKEN}@github.com" > ~/.git-credentials
      - name: Clippy and Cargo Build
        run: |-
          echo $TAG                  
          just local-test
  build:
    needs: ci
    runs-on: self-hosted
    if: |
      always() &&
      github.event.inputs.run_build == 'true' &&
      (needs.ci.result == 'success' || needs.ci.result == 'skipped')
    steps:
      - uses: actions/checkout@v3
      
      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          project_id: 'ivanshyu'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          project_id: 'ivanshyu'

      - name: Configure Docker
        run: gcloud auth configure-docker gcr.io

      - name: Build and push Docker image
        run: just docker-release
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: |
      always() &&
      github.event.inputs.run_deploy == 'true' &&
      (needs.build.result == 'success' || needs.build.result == 'skipped')    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
          project_id: 'ivanshyu'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          project_id: 'ivanshyu'

      - name: Install GKE Auth Plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Configure kubectl
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud container clusters get-credentials personal-cluster --zone asia-east1-a --project ivanshyu

      - name: Deploy to GKE
        run: kubectl apply -f ./deployment/k8s-configs/bis-pod.yaml

      - name: Verify deployment
        run: |
          kubectl rollout status deployment/bis -n default
